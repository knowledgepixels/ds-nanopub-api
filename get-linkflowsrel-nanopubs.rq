#+ summary: Get the simple LinkFlows relation nanopublications that match the requirements for linking from a Data Science submission
#+ method: GET
#+ pagination: 1000
#+ endpoint_in_url: False

prefix np: <http://www.nanopub.org/nschema#>
prefix npa: <http://purl.org/nanopub/admin/>
prefix npx: <http://purl.org/nanopub/x/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix dct: <http://purl.org/dc/terms/>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix nt: <https://w3id.org/np/o/ntemplate/>

select distinct ?np ?subj ?rel ?obj ?label ?date where {
  graph npa:graph {
    ?np npa:hasHeadGraph ?h .
    ?np dct:created ?date .
    ?np npa:hasValidSignatureForPublicKey ?pubkey .
  }
  graph ?h {
    ?np np:hasAssertion ?a .
    ?np np:hasPublicationInfo ?i.
  }
  graph ?a {
    ?subj ?rel ?obj .
    filter regex(?rel, "https://w3id.org/linkflows/superpattern/terms/.*")
  }
  graph ?i {
    ?np dct:creator ?__creator_iri .
    optional { ?subj nt:hasLabelFromApi ?subjlabel }
    optional { ?obj nt:hasLabelFromApi ?objlabel }
  }
  graph <http://purl.org/np/RAm_J6ouyexskBDx9FEIvv9SEKoN_s7KIQMMvx8ZL_3PA#assertion> {
    ?rel rdfs:label ?rellabel .
  }
  bind(coalesce(?subjlabel, replace(str(?subj), "^.*/([^/]*)$", "$1")) as ?subjx)
  bind(coalesce(?objlabel, replace(str(?obj), "^.*/([^/]*)$", "$1")) as ?objx)
  bind(concat(?subjx, " ", ?rellabel, " ", ?objx, ".") as ?label)
  filter not exists {
    graph npa:graph {
      ?newversion npa:hasHeadGraph ?nh .
      ?newversion npa:hasValidSignatureForPublicKey ?pubkey .
    }
    graph ?nh {
      ?newversion np:hasPublicationInfo ?ni .
    }
    graph ?ni {
      ?newversion npx:supersedes ?np .
    }
  }
  filter not exists {
    graph npa:graph {
      ?retraction npa:hasHeadGraph ?rh .
      ?retraction npa:hasValidSignatureForPublicKey ?pubkey .
    }
    graph ?rh {
      ?retraction np:hasAssertion ?ra .
    }
    graph ?ra {
      ?somebody npx:retracts ?np .
    }
  }
}
order by desc(?date)
